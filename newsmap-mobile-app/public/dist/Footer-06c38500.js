
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, a4 as onMount, F as Fa, a5 as faCopyright, e as element, b as space, f as attr_dev, c as add_location, h as insert_dev, j as append_dev, l as detach_dev, g as set_style, V as group_outros, G as transition_out, W as check_outros, E as transition_in, A as create_component, B as mount_component, n as noop, H as destroy_component, t as text, a6 as set_data_dev } from './main-477e1cc7.js';
import { f as faTiktok, a as faInstagram, b as faTwitter, c as faFacebook, d as faYoutube } from './Head-bc165711.js';

/* src\Footer.svelte generated by Svelte v3.46.4 */
const file = "src\\Footer.svelte";

// (34:16) {:else}
function create_else_block_2(ctx) {
	let a0;
	let p0;
	let t1;
	let a1;
	let p1;
	let t3;
	let a2;
	let p2;

	const block = {
		c: function create() {
			a0 = element("a");
			p0 = element("p");
			p0.textContent = "Laporan";
			t1 = space();
			a1 = element("a");
			p1 = element("p");
			p1.textContent = "Tentang Kami";
			t3 = space();
			a2 = element("a");
			p2 = element("p");
			p2.textContent = "Redaksi";
			attr_dev(p0, "class", "svelte-bgcfw2");
			add_location(p0, file, 35, 20, 1242);
			attr_dev(a0, "href", `/deduktif`);
			attr_dev(a0, "class", "svelte-bgcfw2");
			add_location(a0, file, 34, 16, 1198);
			attr_dev(p1, "class", "svelte-bgcfw2");
			add_location(p1, file, 38, 20, 1346);
			attr_dev(a1, "href", `/deduktif/about`);
			attr_dev(a1, "class", "svelte-bgcfw2");
			add_location(a1, file, 37, 16, 1296);
			attr_dev(p2, "class", "svelte-bgcfw2");
			add_location(p2, file, 41, 20, 1457);
			attr_dev(a2, "href", `/deduktif/redaksi`);
			attr_dev(a2, "class", "svelte-bgcfw2");
			add_location(a2, file, 40, 16, 1405);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a0, anchor);
			append_dev(a0, p0);
			insert_dev(target, t1, anchor);
			insert_dev(target, a1, anchor);
			append_dev(a1, p1);
			insert_dev(target, t3, anchor);
			insert_dev(target, a2, anchor);
			append_dev(a2, p2);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(a1);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(a2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block_2.name,
		type: "else",
		source: "(34:16) {:else}",
		ctx
	});

	return block;
}

// (24:16) {#if page != 'indeksdeduktif'}
function create_if_block_3(ctx) {
	let a0;
	let p0;
	let t1;
	let a1;
	let p1;
	let t3;
	let a2;
	let p2;

	const block = {
		c: function create() {
			a0 = element("a");
			p0 = element("p");
			p0.textContent = "Tentang Kami";
			t1 = space();
			a1 = element("a");
			p1 = element("p");
			p1.textContent = "Redaksi";
			t3 = space();
			a2 = element("a");
			p2 = element("p");
			p2.textContent = "Klub Sosial Jurno";
			attr_dev(p0, "class", "svelte-bgcfw2");
			add_location(p0, file, 25, 20, 893);
			attr_dev(a0, "href", `/about`);
			attr_dev(a0, "class", "svelte-bgcfw2");
			add_location(a0, file, 24, 16, 852);
			attr_dev(p1, "class", "svelte-bgcfw2");
			add_location(p1, file, 28, 20, 995);
			attr_dev(a1, "href", `/redaksi`);
			attr_dev(a1, "class", "svelte-bgcfw2");
			add_location(a1, file, 27, 16, 952);
			attr_dev(p2, "class", "svelte-bgcfw2");
			add_location(p2, file, 31, 20, 1109);
			attr_dev(a2, "href", "");
			attr_dev(a2, "class", "svelte-bgcfw2");
			add_location(a2, file, 30, 16, 1049);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a0, anchor);
			append_dev(a0, p0);
			insert_dev(target, t1, anchor);
			insert_dev(target, a1, anchor);
			append_dev(a1, p1);
			insert_dev(target, t3, anchor);
			insert_dev(target, a2, anchor);
			append_dev(a2, p2);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(a1);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(a2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(24:16) {#if page != 'indeksdeduktif'}",
		ctx
	});

	return block;
}

// (48:16) {#if page != 'indeksdeduktif'}
function create_if_block_2(ctx) {
	let a0;
	let p0;
	let t1;
	let a1;
	let p1;
	let t3;
	let a2;
	let p2;

	const block = {
		c: function create() {
			a0 = element("a");
			p0 = element("p");
			p0.textContent = "Jurno Original";
			t1 = space();
			a1 = element("a");
			p1 = element("p");
			p1.textContent = "Deduktif";
			t3 = space();
			a2 = element("a");
			p2 = element("p");
			p2.textContent = "Paralaks";
			attr_dev(p0, "class", "svelte-bgcfw2");
			add_location(p0, file, 49, 24, 1688);
			attr_dev(a0, "href", `/article`);
			attr_dev(a0, "class", "svelte-bgcfw2");
			add_location(a0, file, 48, 20, 1641);
			attr_dev(p1, "class", "svelte-bgcfw2");
			add_location(p1, file, 52, 24, 1805);
			attr_dev(a1, "href", `/deduktif`);
			attr_dev(a1, "class", "svelte-bgcfw2");
			add_location(a1, file, 51, 20, 1757);
			attr_dev(p2, "class", "svelte-bgcfw2");
			add_location(p2, file, 55, 24, 1916);
			attr_dev(a2, "href", `/paralaks`);
			attr_dev(a2, "class", "svelte-bgcfw2");
			add_location(a2, file, 54, 20, 1868);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a0, anchor);
			append_dev(a0, p0);
			insert_dev(target, t1, anchor);
			insert_dev(target, a1, anchor);
			append_dev(a1, p1);
			insert_dev(target, t3, anchor);
			insert_dev(target, a2, anchor);
			append_dev(a2, p2);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(a1);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(a2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(48:16) {#if page != 'indeksdeduktif'}",
		ctx
	});

	return block;
}

// (68:16) {:else}
function create_else_block_1(ctx) {
	let div5;
	let a0;
	let div0;
	let fa0;
	let t0;
	let a1;
	let div1;
	let fa1;
	let t1;
	let a2;
	let div2;
	let fa2;
	let t2;
	let a3;
	let div3;
	let fa3;
	let t3;
	let a4;
	let div4;
	let fa4;
	let current;

	fa0 = new Fa({
			props: { icon: faInstagram },
			$$inline: true
		});

	fa1 = new Fa({
			props: { icon: faFacebook },
			$$inline: true
		});

	fa2 = new Fa({
			props: { icon: faTwitter },
			$$inline: true
		});

	fa3 = new Fa({
			props: { icon: faYoutube },
			$$inline: true
		});

	fa4 = new Fa({
			props: { icon: faTiktok },
			$$inline: true
		});

	const block = {
		c: function create() {
			div5 = element("div");
			a0 = element("a");
			div0 = element("div");
			create_component(fa0.$$.fragment);
			t0 = space();
			a1 = element("a");
			div1 = element("div");
			create_component(fa1.$$.fragment);
			t1 = space();
			a2 = element("a");
			div2 = element("div");
			create_component(fa2.$$.fragment);
			t2 = space();
			a3 = element("a");
			div3 = element("div");
			create_component(fa3.$$.fragment);
			t3 = space();
			a4 = element("a");
			div4 = element("div");
			create_component(fa4.$$.fragment);
			attr_dev(div0, "class", "sm ig svelte-bgcfw2");
			add_location(div0, file, 70, 24, 2528);
			attr_dev(a0, "href", "https://www.instagram.com/jurnoid/");
			attr_dev(a0, "class", "svelte-bgcfw2");
			add_location(a0, file, 69, 20, 2428);
			attr_dev(div1, "class", "sm fb svelte-bgcfw2");
			add_location(div1, file, 75, 24, 2747);
			attr_dev(a1, "href", "");
			attr_dev(a1, "class", "svelte-bgcfw2");
			add_location(a1, file, 74, 20, 2682);
			attr_dev(div2, "class", "sm tw svelte-bgcfw2");
			add_location(div2, file, 80, 24, 2993);
			attr_dev(a2, "href", "https://twitter.com/jurno_id");
			attr_dev(a2, "class", "svelte-bgcfw2");
			add_location(a2, file, 79, 20, 2900);
			attr_dev(div3, "class", "sm yt svelte-bgcfw2");
			add_location(div3, file, 85, 24, 3265);
			attr_dev(a3, "href", "https://www.youtube.com/channel/UCSGTUIGbrpONOTayMXAIcqw");
			attr_dev(a3, "class", "svelte-bgcfw2");
			add_location(a3, file, 84, 20, 3145);
			attr_dev(div4, "class", "sm tt svelte-bgcfw2");
			add_location(div4, file, 90, 24, 3503);
			attr_dev(a4, "href", "www.tiktok.com/@jurnoid");
			attr_dev(a4, "class", "svelte-bgcfw2");
			add_location(a4, file, 89, 20, 3417);
			attr_dev(div5, "class", "sosmed svelte-bgcfw2");
			add_location(div5, file, 68, 16, 2386);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div5, anchor);
			append_dev(div5, a0);
			append_dev(a0, div0);
			mount_component(fa0, div0, null);
			append_dev(div5, t0);
			append_dev(div5, a1);
			append_dev(a1, div1);
			mount_component(fa1, div1, null);
			append_dev(div5, t1);
			append_dev(div5, a2);
			append_dev(a2, div2);
			mount_component(fa2, div2, null);
			append_dev(div5, t2);
			append_dev(div5, a3);
			append_dev(a3, div3);
			mount_component(fa3, div3, null);
			append_dev(div5, t3);
			append_dev(div5, a4);
			append_dev(a4, div4);
			mount_component(fa4, div4, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(fa0.$$.fragment, local);
			transition_in(fa1.$$.fragment, local);
			transition_in(fa2.$$.fragment, local);
			transition_in(fa3.$$.fragment, local);
			transition_in(fa4.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(fa0.$$.fragment, local);
			transition_out(fa1.$$.fragment, local);
			transition_out(fa2.$$.fragment, local);
			transition_out(fa3.$$.fragment, local);
			transition_out(fa4.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div5);
			destroy_component(fa0);
			destroy_component(fa1);
			destroy_component(fa2);
			destroy_component(fa3);
			destroy_component(fa4);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block_1.name,
		type: "else",
		source: "(68:16) {:else}",
		ctx
	});

	return block;
}

// (60:16) {#if page == 'indeksdeduktif'}
function create_if_block_1(ctx) {
	let div1;
	let a;
	let div0;
	let fa;
	let current;

	fa = new Fa({
			props: { icon: faTwitter },
			$$inline: true
		});

	const block = {
		c: function create() {
			div1 = element("div");
			a = element("a");
			div0 = element("div");
			create_component(fa.$$.fragment);
			attr_dev(div0, "class", "sm tw svelte-bgcfw2");
			add_location(div0, file, 62, 24, 2189);
			attr_dev(a, "href", "https://twitter.com/deduktifid");
			attr_dev(a, "class", "svelte-bgcfw2");
			add_location(a, file, 61, 20, 2094);
			attr_dev(div1, "class", "sosmed svelte-bgcfw2");
			add_location(div1, file, 60, 16, 2052);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, a);
			append_dev(a, div0);
			mount_component(fa, div0, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(fa.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(fa.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			destroy_component(fa);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(60:16) {#if page == 'indeksdeduktif'}",
		ctx
	});

	return block;
}

// (104:12) {:else}
function create_else_block(ctx) {
	let p;
	let t0;
	let fa;
	let t1;
	let t2;
	let current;

	fa = new Fa({
			props: { icon: faCopyright },
			$$inline: true
		});

	const block = {
		c: function create() {
			p = element("p");
			t0 = text("PT Ide Digital Inventura ");
			create_component(fa.$$.fragment);
			t1 = space();
			t2 = text(/*dateString*/ ctx[1]);
			attr_dev(p, "class", "svelte-bgcfw2");
			add_location(p, file, 104, 16, 3958);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t0);
			mount_component(fa, p, null);
			append_dev(p, t1);
			append_dev(p, t2);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (!current || dirty & /*dateString*/ 2) set_data_dev(t2, /*dateString*/ ctx[1]);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(fa.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(fa.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
			destroy_component(fa);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(104:12) {:else}",
		ctx
	});

	return block;
}

// (100:12) {#if page == 'indeksdeduktif'}
function create_if_block(ctx) {
	let p;
	let t0;
	let fa;
	let t1;
	let t2;
	let current;

	fa = new Fa({
			props: { icon: faCopyright },
			$$inline: true
		});

	const block = {
		c: function create() {
			p = element("p");
			t0 = text("PT Deduktif Warta Mardika ");
			create_component(fa.$$.fragment);
			t1 = space();
			t2 = text(/*dateString*/ ctx[1]);
			attr_dev(p, "class", "svelte-bgcfw2");
			add_location(p, file, 100, 16, 3808);
		},
		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t0);
			mount_component(fa, p, null);
			append_dev(p, t1);
			append_dev(p, t2);
			current = true;
		},
		p: function update(ctx, dirty) {
			if (!current || dirty & /*dateString*/ 2) set_data_dev(t2, /*dateString*/ ctx[1]);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(fa.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(fa.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(p);
			destroy_component(fa);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(100:12) {#if page == 'indeksdeduktif'}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let footer;
	let div0;
	let t0;
	let section;
	let div3;
	let div1;
	let t1;
	let div2;
	let t2;
	let current_block_type_index;
	let if_block2;
	let t3;
	let div4;
	let current_block_type_index_1;
	let if_block3;
	let current;

	function select_block_type(ctx, dirty) {
		if (/*page*/ ctx[0] != 'indeksdeduktif') return create_if_block_3;
		return create_else_block_2;
	}

	let current_block_type = select_block_type(ctx);
	let if_block0 = current_block_type(ctx);
	let if_block1 = /*page*/ ctx[0] != 'indeksdeduktif' && create_if_block_2(ctx);
	const if_block_creators = [create_if_block_1, create_else_block_1];
	const if_blocks = [];

	function select_block_type_1(ctx, dirty) {
		if (/*page*/ ctx[0] == 'indeksdeduktif') return 0;
		return 1;
	}

	current_block_type_index = select_block_type_1(ctx);
	if_block2 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
	const if_block_creators_1 = [create_if_block, create_else_block];
	const if_blocks_1 = [];

	function select_block_type_2(ctx, dirty) {
		if (/*page*/ ctx[0] == 'indeksdeduktif') return 0;
		return 1;
	}

	current_block_type_index_1 = select_block_type_2(ctx);
	if_block3 = if_blocks_1[current_block_type_index_1] = if_block_creators_1[current_block_type_index_1](ctx);

	const block = {
		c: function create() {
			footer = element("footer");
			div0 = element("div");
			t0 = space();
			section = element("section");
			div3 = element("div");
			div1 = element("div");
			if_block0.c();
			t1 = space();
			div2 = element("div");
			if (if_block1) if_block1.c();
			t2 = space();
			if_block2.c();
			t3 = space();
			div4 = element("div");
			if_block3.c();
			attr_dev(div0, "class", "divider svelte-bgcfw2");

			set_style(div0, "background-color", /*page*/ ctx[0] == 'indeksdeduktif'
			? '#050505'
			: '#fafafa');

			add_location(div0, file, 19, 4, 535);
			attr_dev(div1, "class", "left svelte-bgcfw2");
			add_location(div1, file, 22, 12, 768);
			attr_dev(div2, "class", "right svelte-bgcfw2");
			add_location(div2, file, 46, 12, 1552);
			attr_dev(div3, "class", "menu svelte-bgcfw2");
			add_location(div3, file, 21, 8, 736);
			attr_dev(div4, "class", "bottom svelte-bgcfw2");
			add_location(div4, file, 98, 8, 3726);
			set_style(section, "background-color", /*page*/ ctx[0] == 'indeksdeduktif' ? '#333' : '#ededed');
			attr_dev(section, "class", "svelte-bgcfw2");
			add_location(section, file, 20, 4, 644);
			set_style(footer, "background-color", /*page*/ ctx[0] == 'indeksdeduktif' ? '#333' : '#ededed');
			attr_dev(footer, "class", "svelte-bgcfw2");
			add_location(footer, file, 18, 0, 448);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, footer, anchor);
			append_dev(footer, div0);
			append_dev(footer, t0);
			append_dev(footer, section);
			append_dev(section, div3);
			append_dev(div3, div1);
			if_block0.m(div1, null);
			append_dev(div3, t1);
			append_dev(div3, div2);
			if (if_block1) if_block1.m(div2, null);
			append_dev(div2, t2);
			if_blocks[current_block_type_index].m(div2, null);
			append_dev(section, t3);
			append_dev(section, div4);
			if_blocks_1[current_block_type_index_1].m(div4, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*page*/ 1) {
				set_style(div0, "background-color", /*page*/ ctx[0] == 'indeksdeduktif'
				? '#050505'
				: '#fafafa');
			}

			if (current_block_type !== (current_block_type = select_block_type(ctx))) {
				if_block0.d(1);
				if_block0 = current_block_type(ctx);

				if (if_block0) {
					if_block0.c();
					if_block0.m(div1, null);
				}
			}

			if (/*page*/ ctx[0] != 'indeksdeduktif') {
				if (if_block1) ; else {
					if_block1 = create_if_block_2(ctx);
					if_block1.c();
					if_block1.m(div2, t2);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type_1(ctx);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				check_outros();
				if_block2 = if_blocks[current_block_type_index];

				if (!if_block2) {
					if_block2 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block2.c();
				} else {
					if_block2.p(ctx, dirty);
				}

				transition_in(if_block2, 1);
				if_block2.m(div2, null);
			}

			let previous_block_index_1 = current_block_type_index_1;
			current_block_type_index_1 = select_block_type_2(ctx);

			if (current_block_type_index_1 === previous_block_index_1) {
				if_blocks_1[current_block_type_index_1].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks_1[previous_block_index_1], 1, 1, () => {
					if_blocks_1[previous_block_index_1] = null;
				});

				check_outros();
				if_block3 = if_blocks_1[current_block_type_index_1];

				if (!if_block3) {
					if_block3 = if_blocks_1[current_block_type_index_1] = if_block_creators_1[current_block_type_index_1](ctx);
					if_block3.c();
				} else {
					if_block3.p(ctx, dirty);
				}

				transition_in(if_block3, 1);
				if_block3.m(div4, null);
			}

			if (!current || dirty & /*page*/ 1) {
				set_style(section, "background-color", /*page*/ ctx[0] == 'indeksdeduktif' ? '#333' : '#ededed');
			}

			if (!current || dirty & /*page*/ 1) {
				set_style(footer, "background-color", /*page*/ ctx[0] == 'indeksdeduktif' ? '#333' : '#ededed');
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block2);
			transition_in(if_block3);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block2);
			transition_out(if_block3);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(footer);
			if_block0.d();
			if (if_block1) if_block1.d();
			if_blocks[current_block_type_index].d();
			if_blocks_1[current_block_type_index_1].d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('Footer', slots, []);
	let { page } = $$props;
	let now = new Date(), year;
	let dateString;

	onMount(() => {
		year = now.getFullYear();
		$$invalidate(1, dateString = [year].join('-'));
	});

	const writable_props = ['page'];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Footer> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ('page' in $$props) $$invalidate(0, page = $$props.page);
	};

	$$self.$capture_state = () => ({
		Fa,
		faTiktok,
		faInstagram,
		faTwitter,
		faFacebook,
		faYoutube,
		faCopyright,
		onMount,
		page,
		now,
		year,
		dateString
	});

	$$self.$inject_state = $$props => {
		if ('page' in $$props) $$invalidate(0, page = $$props.page);
		if ('now' in $$props) now = $$props.now;
		if ('year' in $$props) year = $$props.year;
		if ('dateString' in $$props) $$invalidate(1, dateString = $$props.dateString);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [page, dateString];
}

class Footer extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { page: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Footer",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*page*/ ctx[0] === undefined && !('page' in props)) {
			console.warn("<Footer> was created without expected prop 'page'");
		}
	}

	get page() {
		throw new Error("<Footer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set page(value) {
		throw new Error("<Footer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { Footer as F };
//# sourceMappingURL=Footer-06c38500.js.map
