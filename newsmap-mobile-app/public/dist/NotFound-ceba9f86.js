
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, b as space, c as add_location, f as attr_dev, g as set_style, h as insert_dev, j as append_dev, k as action_destroyer, n as noop, l as detach_dev } from './main-1d28085c.js';
import { l as link } from './Router-3cee6396.js';

/* src\pages\NotFound.svelte generated by Svelte v3.46.4 */
const file = "src\\pages\\NotFound.svelte";

function create_fragment(ctx) {
	let div;
	let h1;
	let t1;
	let p;
	let t3;
	let a;
	let button;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div = element("div");
			h1 = element("h1");
			h1.textContent = "We are sorry!";
			t1 = space();
			p = element("p");
			p.textContent = "The page not found.";
			t3 = space();
			a = element("a");
			button = element("button");
			button.textContent = "Home";
			add_location(h1, file, 5, 4, 104);
			add_location(p, file, 6, 4, 131);
			add_location(button, file, 8, 8, 214);
			attr_dev(a, "href", "/");
			set_style(a, "color", "black");
			add_location(a, file, 7, 4, 162);
			set_style(div, "text-align", "center");
			add_location(div, file, 4, 0, 66);
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, h1);
			append_dev(div, t1);
			append_dev(div, p);
			append_dev(div, t3);
			append_dev(div, a);
			append_dev(a, button);

			if (!mounted) {
				dispose = action_destroyer(link.call(null, a));
				mounted = true;
			}
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots('NotFound', slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<NotFound> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ link });
	return [];
}

class NotFound extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "NotFound",
			options,
			id: create_fragment.name
		});
	}
}

export { NotFound as default };
//# sourceMappingURL=NotFound-ceba9f86.js.map
